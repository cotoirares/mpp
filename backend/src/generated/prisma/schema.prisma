// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String            @id @default(uuid())
  email         String            @unique
  password      String
  role          UserRole          @default(USER)
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  matches       Match[]
  activityLogs  UserActivityLog[]
  isMonitored   Boolean           @default(false)
  monitoredUser MonitoredUser?
}

model Player {
  id               String   @id @default(uuid())
  name             String
  ranking          Int
  country          String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  matchesAsPlayer1 Match[]  @relation("Player1Matches")
  matchesAsPlayer2 Match[]  @relation("Player2Matches")
}

model Match {
  id          String   @id @default(uuid())
  date        DateTime
  score       String
  tournament  String
  player1Id   String
  player2Id   String
  createdById String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  player1     Player   @relation("Player1Matches", fields: [player1Id], references: [id])
  player2     Player   @relation("Player2Matches", fields: [player2Id], references: [id])
  createdBy   User     @relation(fields: [createdById], references: [id])
}

model UserActivityLog {
  id        String   @id @default(uuid())
  userId    String
  action    String
  entity    String
  entityId  String
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model MonitoredUser {
  id         String   @id @default(uuid())
  userId     String   @unique
  reason     String
  detectedAt DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}

enum UserRole {
  USER
  ADMIN
}
